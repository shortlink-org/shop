[project]
name = "shop_admin"
description = "This service is responsible for the administration of the shop."
readme = "README.md"
requires-python = ">=3.12"
dynamic = ["version"]

dependencies = [
  "django-ory-auth @ git+https://github.com/micro-company/django_ory_auth@master",
  'asgiref==3.8.1',
  'attrs==25.1.0',
  'certifi==2025.4.26',
  'charset-normalizer==3.4.2',
  'deprecated==1.2.18',
  'django==5.2.1',
  'django-admin-tailwind==0.0.31',
  'django-debug-toolbar==5.0.1',
  'django-environ==0.12.0',
  'django-health-check==3.18.3',
  'django-prometheus==2.3.1',
  'django-request-logging==0.7.5',
  'djangorestframework==3.16.0',
  'markdown',
  'django-filter',
  'drf-spectacular==0.28.0',
  'drf-yasg==1.21.10',
  'googleapis-common-protos==1.70.0',
  'grpcio==1.72.1',
  'idna==3.10',
  'importlib-metadata==8.7.0', # TODO: depencies of opentelemetry-api
  'inflection==0.5.1',
  'json-log-formatter==1.1.1',
  'jsonschema==4.24.0',
  'jsonschema-specifications==2025.4.1',
  'opentelemetry-api==1.30.0',
  'opentelemetry-exporter-otlp==1.30.0',
  'opentelemetry-exporter-otlp-proto-common==1.30.0',
  'opentelemetry-exporter-otlp-proto-grpc==1.33.1',
  'opentelemetry-exporter-otlp-proto-http==1.33.1',
  'opentelemetry-instrumentation==0.47b0',
  'opentelemetry-instrumentation-dbapi==0.47b0',
  'opentelemetry-instrumentation-django==0.47b0',
  'opentelemetry-instrumentation-logging==0.54b1',
  'opentelemetry-instrumentation-requests==0.54b1',
  'opentelemetry-instrumentation-sqlite3==0.54b0',
  'opentelemetry-instrumentation-wsgi==0.47b0',
  'opentelemetry-proto==1.33.1',
  'opentelemetry-sdk==1.30.0',
  'opentelemetry-semantic-conventions==0.47b0',
  'opentelemetry-util-http==0.47b0',
  'packaging==25.0',
  'pip==25.0.1',
  'prometheus-client==0.22.1',
  'protobuf==6.31.1', # TODO: depencies of opentelemetry-proto
  'pytz==2025.2',
  'pyyaml==6.0.2',
  'referencing==0.36.2',
  'requests==2.32.3',
  'rpds-py==0.25.1',
  'setuptools==80.9.0',
  'sqlparse==0.5.3',
  'typing-extensions==4.13.2',
  'uritemplate==4.1.1',
  'urllib3==2.4.0',
  'uv==0.7.8',
  'wrapt==1.17.2',
  'zipp==3.22.0',
  'psycopg2-binary==2.9.10',
  'redis',
  'django-redis'
]

[build-system]
requires = ["setuptools~=80.9"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "src._version.__version__"}

[tool.setuptools.package-data]
"src" = ["py.typed"]

[tool.pytest.ini_options]
addopts = "-ra -q --cov-report term-missing --cov libname --fixtures tests"

[tool.ruff]
unsafe-fixes = true
line-length = 120
extend-exclude = [
  "src/domain/goods/migrations/*",
  "tests/*",
]
exclude = [".venv", "*_pb2.py", "*_pb2_grpc.py", "*_pb2.pyi"]

[tool.ruff.lint]
select = [
  # TODO: enable all checks
  #  "ALL",
  "E", "W", # pycodestyle
  "F",      # pyflakes
  "UP",     # pyupgrade
  "D",      # pydocstyle
  "N",      # pylint
  "PL",     # pylint
  "RUF",    # ruff
  "TID",    # tidy
  "I",      # isort
]

[tool.ruff.lint.isort]
no-lines-before = ["standard-library", "local-folder"]
known-third-party = []
known-local-folder = ["src"]

[tool.ruff.lint.pydocstyle]
convention = "google"
